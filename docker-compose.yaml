services:
  traefik:
    image: traefik:v2.9.6
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
    ports:
      - "88:80"
      - "8088:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      
  memoires-api:
    build:
      context: ../memoires-api
      dockerfile: Dockerfile.dev  # Uses the dockerfile containing cargo-watch
    environment:
      - DB_HOST=memoires-db
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=psql
      - DB_NAME=postgres
      - DB_PREFIX=postgresql
    ports:
      - 3005:3000
    depends_on:
        - memoires-db
    volumes:
      - ../memoires-api/src:/app/src
      - memoires-api-data:/app/target  # Store builds in docker volume
      - ../memoires-api/Cargo.toml:/app/Cargo.toml
      - ../memoires-api/Cargo.lock:/app/Cargo.lock
    labels:
      - "traefik.http.routers.memoires-api.rule=Host(`memoires`) && PathPrefix(`/api`)"
      - "traefik.http.services.memoires-api.loadbalancer.server.port=3000"


  memoires-ui:
    build:
      context: .
      dockerfile: Dockerfile.dev  # Uses the dockerfile containing yarn dev
    labels:
      - "traefik.http.routers.memoires-ui.rule=Host(`memoires`)"
      - "traefik.http.services.memoires-ui.loadbalancer.server.port=5173"
    volumes:
      - ../memoires-ui/src:/app/src
      - memoires-ui-node-modules:/app/node_modules

  memoires-db:
    image: postgis/postgis:16-master
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=psql
      - POSTGRES_DB=postgres
    ports:
      - 5433:5432
    volumes:
      - memoires-db-data:/var/lib/postgresql/data

  api-cache:
    image: redis:7.4.0
    ports:
      - 6379:6379

volumes:
  memoires-db-data:
  memoires-api-data:
  memoires-ui-node-modules: